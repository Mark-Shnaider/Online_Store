- Сначала создаем репозиторий в Github, затем клонируем его (git clone <URL>) в локальный репозиторий. Затем можно работать и пушить.
- В сервисе можно работать с DbContext.
- Класс DTO должен содержать только те данные, которые мы собираемся передать на уровень представления или, наоборот, получить с этого уровня.
В идеале, должны быть только свойства(properties)
- UnitOfWork представляет собой класс DbContext(или свой какой-то AppContext), а DbSet - репозитории(для каждой сущности)
servicehost
automapper используется в сервисах и контроллерах
- SelectList with asp-items: https://stackoverflow.com/questions/34624034/select-tag-helper-in-asp-net-core-mvc
- EntityFramewok - если фейлится проверить, что нет ошибок(собрать проект)
- В дебагере online_store  в npm data

Итого ServiceHost == ServiceProvider, BaseService их юзает, чтобы связываться с остальными сервисами
в startup мы не трогаем BaseService. Мы привязываем интерфейсы к их реализации
все зависимости в конструкторе BaseService в рантайме автоматически резолвятся

Менял стартовую страницу в launcgsetting.json добавил  строку  launchurl в profiles/ Мб проблемы будут при деплое
https://stackoverflow.com/questions/40646815/how-to-set-start-page-in-dotnet-core-web-api
"launchUrl": "https://localhost:44326/Identity/Account/Index",

Убрал зависимости проекта в ItemGroup у 
    <ProjectReference Include="..\Data\Data.csproj" />

Сделать, чтобы можно было просмотреть пароль(через глазик например) и добавить поле подветрждение пароля(UserVM)

Исправить,  что при входе нулевой юзер

Добавить regex для значения товаров, чтобы можно было токо циферки вставить

Пофиксить проблему, чтобы сразу проверялось значение товаров(в input)

Исправить,что когда вводишь цифру изменялось количество товара сверху
Admin
VeryGood1_

https://github.com/bugdaryan/FoodStore/tree/master/Shop.Data


Убрал футер
    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - Online_Store - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>



<partial name="Partials/_CategorySelectPartial" />
<table>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>
                    <div ng- class="product-wrap">
                        <div class="product-item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg">
                        </div>
                        <div class="product-title">
                            <a class="fs-4" asp-controller="Product" asp-action="Details">@product.Name</a> <br />
                            <h3>₽ @product.Price</h3>
                        </div>
                    </div>
                </td>

                <td>
                    <div class="product-container">
                        <input id="@product.GetHashCode()" value="@product.Total" readonly>
                        <div class="product-amount">
                            <a class="btn badge-info" onclick="changeValue(document.getElementById('@product.Id'), document.getElementById('@product.GetHashCode()'),@product.Total ,@product.Price.ToString(CultureInfo.InvariantCulture), -1)">-</a>
                            <input type="number" id="@product.Id" asp-for="@product.Amount" min="1" step="1">
                            <a class="btn badge-info" onclick="changeValue(document.getElementById('@product.Id'), document.getElementById('@product.GetHashCode()'),@product.Total ,@product.Price.ToString(CultureInfo.InvariantCulture), 1)">+</a>
                        </div>
                        <input type="submit" data-product-id="@product.Id" data-cart-id="@Model.Id" onclick="RemoveFromCart(this)" value="Remove from cart" />
                        <input type="submit" data-product-id="@product.Id" data-cart-id="@Model.Id" onclick="AddToCart(this)" value="Add to cart" />
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>